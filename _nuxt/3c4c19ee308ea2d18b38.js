(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{236:function(e,o){const r={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var e=this,o=e.$createElement,r=e._self._c||o;return r("div",{staticClass:"frontmatter-markdown"},[r("h1",[e._v("Errores")]),e._v(" "),r("ul",[r("li",[e._v("Tratar de adivinar")]),e._v(" "),r("li",[e._v("No saber leer los errores")]),e._v(" "),r("li",[e._v("No saber las bases y fundamentos de lo que estan utilizando")]),e._v(" "),r("li",[e._v("Aprender una herramienta antes de un lenguaje")]),e._v(" "),r("li",[e._v("Syntax sugar antes de syntax")])]),e._v(" "),r("h2",[e._v("Tratar de adivinar")]),e._v(" "),r("ul",[r("li",[e._v("No trates de adivinar que es lo que esta pasando, deja de codear y trata de mirar la imagen mas grande.")]),e._v(" "),r("li",[e._v("Si algo no esta andando probando siempre lo mismo no va a andar y si por esas cosas anda no vas a saber por qué y si no es el mismo problema que tenes que resolver te va a pasar lo mismo.")]),e._v(" "),r("li",[e._v("Leer la documentación de lo que estamos usando si es algo externo. Luego de entender como se usa y hacer varias pruebas recien ahi trata de integrarlo en tu solucion.")]),e._v(" "),r("li",[e._v("Analizar tu codigo por partes.")])]),e._v(" "),r("h2",[e._v("No saber leer los errores")]),e._v(" "),r("ul",[r("li",[e._v("Algo importante a la hora de programar es entender que nuestro codigo va a fallar y algo aun más importante es entender cómo solucionarlo. Hoy en día los lenguajes y frameworks que usamos nos ayudan cada vez más en este paso, por lo que hay que entender a leer un mensaje de error, algunos hasta te dicen como implementar la solución, otros hasta podes googlear exactamente igual y encontrar la solución, esto no lo recomiendo porque choca con el punto de arriba, estariamos agregando algo pero adivinando y no entendiendolo de base.")])]),e._v(" "),r("h3",[e._v("Como leer errores?")]),e._v(" "),r("p",[e._v("Por lo general los errores tienen dos partes")]),e._v(" "),r("ul",[r("li",[e._v("El mensaje de error propiamente dicho")]),e._v(" "),r("li",[e._v("La cola de ejecución")])]),e._v(" "),r("blockquote",[r("p",[r("code",{pre:!0},[e._v("*")]),e._v(" puede existir una tercera parte que sea la "),r("em",[e._v("solucion")]),e._v(" o mejor dicho "),r("em",[e._v("recomendacion")]),e._v(" para resolver lo que ocurrio.")])]),e._v(" "),r("h4",[e._v("Mensaje de error")]),e._v(" "),r("h4",[e._v("Cola de ejecución y lectura")]),e._v(" "),r("h4",[e._v("Recomendación")]),e._v(" "),r("h2",[e._v("No saber las bases y fundamentos")]),e._v(" "),r("p",[e._v("Esto aplica en la programación en general, no importa el lenguaje que utilices, lo importante es entender las bases de la programación, luego si estas trabajando con un lenguaje en particular entender las bases de ese lenguaje, por último entender las bases del dispositivo o plataforma donde se va a correr o ver tu codigo (si estas usando la web entender la forma en que se comunica)")]),e._v(" "),r("h3",[e._v("Bases de la programacion")]),e._v(" "),r("ul",[r("li",[e._v("Simplicidad (KISS)")])]),e._v(" "),r("h3",[e._v("Bases de lenguajes")]),e._v(" "),r("h3",[e._v("Bases de la web")]),e._v(" "),r("h3",[e._v("Bases de arquitectura")]),e._v(" "),r("p",[e._v("https://engineering.videoblocks.com/web-architecture-101-a3224e126947")]),e._v(" "),r("h2",[e._v("Aprender un framework antes de saber las bases de un lenguaje")]),e._v(" "),r("p",[e._v("Esto esta estrictamente relacionado con el de arriba, pero es un error muy común ya que en la industria se empieza a tratar de entregar software antes de tiempo, por lo que capaz una persona con falta de experiencia tiene que entregar algo rapido y tiene que hacer el doble trabajo de aprender un lenguaje a partir de framework o una libreria y luego le es dificil poder migrar a otra cosa.")]),e._v(" "),r("h2",[e._v("Tratar de utilizar syntax sugar antes de syntax")]),e._v(" "),r("p",[e._v("Utilizar syntax sugar antes de tener claro los conocimientos de la función qu estamos tratando de simplificar el uso con el syntax sugar.")]),e._v(" "),r("h2",[e._v("Leer o ver contenidos "),r("em",[e._v('"no aptos para juniors"')])]),e._v(" "),r("p",[e._v("Esto es bastante subjetivo, pero he visto que lamentablemente algunos en el comienzo de su carrera no tienen mentores o escuelas que los guien y les puedan aportar buenas referencias. Y hoy en día internet es muy grande y libre por lo que todos (como yo en este momento :)) podemos dar nuestra visión y ayuda, pero eso no significa que este apuntado para gente que esta arrancando.")]),e._v(" "),r("p",[e._v("En internet podemos encontrar contenidos para todos los "),r("em",[e._v("seniorities")]),e._v(" y de todo los tipos, entonces hay que entender en que momento de nuestra carrera estamos, si estamos avanzando tenemos que seguir y leer cierto contenido que puede ser diferente a alguien que esta más avanzado y especializado en su carrera.")]),e._v(" "),r("p",[e._v("Esto ocurre en todas las áreas de conocimiento, donde podemos encontrar papers muy especificos para explicar un tema y otro lugar donde nos muestren un video bajando esos conceptos a nuestro vocabulario y haciendo referencias a situaciones comunes.")]),e._v(" "),r("p",[e._v("Por ultimo hay que estar atento a las cosas que leemos, tratemos de no quedarnos con la primera opcion que encontremos, sino, como cuando necesitamos hacer un procedimiento complicado en medicina que vemos varios medicos, hagamos lo mismo con la programacion antes de implementar un procedimiento.")]),e._v(" "),r("h2",[e._v("Pensar que es fácil")]),e._v(" "),r("p",[e._v("Esto viene por parte del marketing y la industria. Veo cosas como aprende javascript en dos dias, crea tu pagina en dos horas, y cosas por el estilo, gente que esta arrancando chupa eso y resulta en que uno se cree lo que le dicen y no es verdad. Programar es dificil, es una practica que lleva tiempo, implica logica, matematica, semantica, sintaxis, cosas que uno las aprende a lo largo del tiempo.")]),e._v(" "),r("hr"),e._v(" "),r("h1",[e._v("Career path")]),e._v(" "),r("p",[e._v("http://www.sistemas.frba.utn.edu.ar/index.php/academico/plan-k08")]),e._v(" "),r("ol",[r("li",[e._v("Algoritmos")]),e._v(" "),r("li",[e._v("Sintaxis")]),e._v(" "),r("li",[e._v("paradigmas")]),e._v(" "),r("li",[e._v("diseño")])]),e._v(" "),r("hr"),e._v(" "),r("h2",[e._v("Que cosas quiero que sepas para trabajar conmigo.")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Estructuras de datos (registros, de datos lineales => lista pila cola)")])]),e._v(" "),r("li",[r("p",[e._v("Estructuras de control (secuencial, condicional, cíclica)")])]),e._v(" "),r("li",[r("p",[e._v("Tipos de datos (simple abstracto)")])]),e._v(" "),r("li",[r("p",[e._v("Estrategias de resolucion de problemas (recetas, algoritmos)")])]),e._v(" "),r("li",[r("p",[e._v("Logica")])]),e._v(" "),r("li",[r("p",[e._v("Abstraccion y modularizacion")])]),e._v(" "),r("li",[r("p",[e._v("Encapsulamiento")])]),e._v(" "),r("li",[r("p",[e._v("Declaratividad (importancia de la separación del control de flujo de la lógica del\ndominio a modelar)")])]),e._v(" "),r("li",[r("p",[e._v("Orden superior")])]),e._v(" "),r("li",[r("p",[e._v("Polimorfismo")])]),e._v(" "),r("li",[r("p",[e._v("Separación de conceptos/responsabilidades - creación de unidades")])]),e._v(" "),r("li",[r("p",[e._v("Paradigma imperativo")])]),e._v(" "),r("li",[r("p",[e._v("Paradigma OO")])]),e._v(" "),r("li",[r("p",[e._v("Paradigma Funcional")])]),e._v(" "),r("li",[r("p",[e._v("Herramientas")]),e._v(" "),r("ul",[r("li",[e._v("GIT")]),e._v(" "),r("li",[e._v("Linter")]),e._v(" "),r("li",[e._v("Tipos de escritura (cases)")])])])]),e._v(" "),r("hr"),e._v(" "),r("h1",[e._v("Javascript")]),e._v(" "),r("h2",[e._v("Leccion 0")]),e._v(" "),r("ul",[r("li",[e._v("Programming basics\n"),r("ul",[r("li",[e._v("Que es un programa? => desde el lado del usuario y desde el lado del programador")]),e._v(" "),r("li",[e._v("Que es la programacion?\nLa forma de poder crear soluciones a partir de computadoras usando codigo escrito en un lenguaje de programacion.")]),e._v(" "),r("li",[e._v("Que es el codigo?\nUn programa, codigo fuente o codigo es una serie de intrucciones diciendole a la computadora que cosas tiene que hacer para llegar a nuestro resultado.\nSe puede escribir en texto plano, en un archivo de texto o directamente en una consola como algunos lenguajtes.\nTodo nuestro codigo tiene una sintaxis (como hay que escribirlo) y una semantica (que es lo que queremos transmitir).")])])])]),e._v(" "),r("h2",[e._v("Leccion 1")]),e._v(" "),r("ul",[r("li",[e._v("Minimal sintaxis - Semicolon se necesitan para terminar la sentencia, es optional en verdad, alguien lo pone.")]),e._v(" "),r("li",[e._v("keywords")]),e._v(" "),r("li",[e._v("formas de linkear javacsript en tu pagina")])]),e._v(" "),r("h2",[e._v("Javascript - Concepts")]),e._v(" "),r("ul",[r("li",[r("code",{pre:!0},[e._v("Statements")])]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Expresions")])]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Executing")])]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Output")])]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Input")]),e._v("\n------ Break --------")]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Operators")])]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Values & Types")]),e._v(" (These different representations for values are called types in programming terminology. JavaScript has built-in types for each of these so called primitive values)")]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Converting Between Types")]),e._v(" (coercion & implicit coercion)\n------ Break --------")]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Comments")])]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Variables")]),e._v(" (managing program state -> state is tracking the changes to values as your program runs.)")]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Blocks")])]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Conditionals")]),e._v(" (Estructura de control de decision o condicional)")]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Loops")]),e._v(" (Estructura de control ciclicas)")]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Functions")])]),e._v(" "),r("li",[r("code",{pre:!0},[e._v("Scope")]),e._v(" (lexical scope ->  In JavaScript, each function gets its own scope. Scope is basically a collection of variables as well as the rules for how those variables are accessed by name. Only code inside that function can access that function's scoped variables.)")])]),e._v(" "),r("p",[e._v("Glosario for dummies\nSingle threaded => Solo una cosa puede ocurrir a la vez y por lo general todo se ejecuta secuencial, primero linea 1, después linea 2, etc (procedural)\nVariables => Cajas que guardan valores (simbolos que representan cosas) que las podemos utilizar a lo largo de nuestra aplicacion.")])])}]};e.exports={attributes:{},meta:{resourcePath:"/home/fack/Documentos/Proyectos/personal-website/articles/es/juniors-enhance.md"},vue:{component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=r.render,this.$options.staticRenderFns=r.staticRenderFns}}}}}}]);